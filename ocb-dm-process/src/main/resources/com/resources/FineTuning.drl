package com.resources;

import com.model.Fleet;

rule "gradualScaleUp"
	dialect "mvel"
	no-loop true
	ruleflow-group "finetune"
	when
		f : Fleet( isOverload == true, filter == false, targetCapacity < (f.getCurrentCapacity()) )
	then
		modify( f ) {
				setTargetCapacity( f.getCurrentCapacity()+1 )
		}
		System.out.println("Gradual scale up by 1");
end

rule "gradualScaleDown"
	dialect "mvel"
	no-loop true
	ruleflow-group "finetune"
	when
		f : Fleet( isUnderload == true, filter == false, targetCapacity < (f.getCurrentCapacity()) )
	then
		modify( f ) {
				setTargetCapacity( f.getCurrentCapacity()-1 )
		}
		System.out.println("Gradual scale down by 1");
end

rule "maintainPeakFleet"
	dialect "mvel"
	no-loop true
	ruleflow-group "finetune"
	when
		f : Fleet( isUnderload != true, isOverload != true, filter == false, targetCapacity < (f.getCurrentCapacity()) )
	then
		modify( f ) {
				setTargetCapacity( f.getCurrentCapacity() )
		}
		System.out.println("System at peak, no scaling needed");
end